<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="zipcodes-suite.xml" />
	<munit:test name="get:\project1\(zipcodes):zipcodes-config-test" doc:id="bcd461c4-5561-4981-8fb5-5d1b98a21fd4" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="a97871eb-3c76-414f-8404-ad66bc4a2a1d" >
				<munit:payload value="#[readUrl('classpath://getproject1zipcodeszipcodesconfigtest\set-event_payload2.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getproject1zipcodeszipcodesconfigtest\set-event_attributes2.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getproject1zipcodeszipcodesconfigtest\set-event_variable_2.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\project1\(zipcodes):zipcodes-config" doc:id="3046943a-8afa-4f86-bf03-f92538c4d52a" name="get:\project1\(zipcodes):zipcodes-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="275d3e17-4d0c-4d67-abad-901059cb032a" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getproject1zipcodeszipcodesconfigtest::assert_expression_payload2
---
assert_expression_payload2::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="zipcodes-suiteTest" doc:id="b12bb6a2-0077-48ed-88dc-2215b5243b31" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when APIKIT:BAD_REQUEST" doc:id="2c55a61b-dab7-42e2-abff-a64e845755ee" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="zipcodes-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="21b0d5a6-c34c-449f-ace4-2a88ad4d14a4" name="zipcodes-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="ffa19471-8931-4771-bb21-1998583a223f" actual="#[vars.httpStatus]" expected="#[400]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="zipcodes-suiteTest1" doc:id="e9516bc2-fd87-432d-877f-3dadd5f98f10" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when APIKIT:NOT_FOUND" doc:id="706cc94b-0c66-4b56-802d-3d1fa531019b" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="zipcodes-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="db5707b6-78c2-4c28-8af9-0b01619b3583" name="zipcodes-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="81c2348d-17f2-4ce1-b807-9bc7ac66ed0c" actual="#[vars.httpStatus]" expected="#[404]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="zipcodes-suiteTest2" doc:id="ab6cd54c-a139-4815-bbb8-13d830f63d91" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when APIKIT:METHOD_NOT_ALLOWED" doc:id="69039038-f914-4e3b-9ef3-f62c555f0cb8" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="zipcodes-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="0723c3d5-7ec3-4bd1-8c97-b19881a5fe80" name="zipcodes-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="e47c519d-1ee9-49bb-bff0-19dd431babe0" actual="#[vars.httpStatus]" expected="#[405]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="zipcodes-suiteTest3" doc:id="96e83f2e-d3a3-4c9f-a278-a615df36c8ba" expectedErrorType="APIKIT:NOT_ACCEPTABLE">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when APIKIT:NOT_ACCEPTABLE " doc:id="65601bc2-9022-4cd7-802f-42c84322dcd0" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="zipcodes-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="1e1a98f7-104a-4c17-8ab8-5304135c758c" name="zipcodes-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="85d1ab7a-4549-420d-9879-1a813be0e62d" actual="#[vars.httpStatus]" expected="#[406]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="zipcodes-suiteTest4" doc:id="dc5a3d42-ba1a-493d-9097-5a8690595891" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when APIKIT:UNSUPPORTED_MEDIA_TYPE" doc:id="107b3e57-0692-43b4-9ffc-41ef840d2a8d" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="zipcodes-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="eaddc6fd-e9ce-4e4a-99ab-18e8fd4b3b39" name="zipcodes-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="36340ce2-272e-4956-8d01-053f4204ac1a" actual="#[vars.httpStatus]" expected="#[415]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="zipcodes-suiteTest5" doc:id="21289e4d-c7b2-4dc5-8ae3-affa1d027a61" expectedErrorType="APIKIT:NOT_IMPLEMENTED">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when APIKIT:NOT_IMPLEMENTED" doc:id="908b20e4-931d-4eff-ada3-94aa25d6c105" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="zipcodes-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="0234e415-a1e9-4d01-b7ee-ca2a7e339624" name="zipcodes-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="eead9d50-68ef-444f-aae6-ea980ec7613c" actual="#[vars.httpStatus]" expected="#[501]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="zipcodes-suiteTest6" doc:id="b4f1f93f-8993-47cd-ba5a-dbb1aedc752e" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when APIKIT:NOT_FOUND" doc:id="f8e426e6-71aa-4a8f-ab19-421b2ca6d998" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="zipcodes-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="c1d97e86-8ecb-4117-aa3f-12d6e78b04ff" name="zipcodes-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="c1cb8f1e-6945-4209-9bef-35a19e53b77a" actual="#[vars.httpStatus]" expected="#[404]"/>
		</munit:validation>
	</munit:test>


</mule>
